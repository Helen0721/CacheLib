{{!

  Copyright (c) Meta Platforms, Inc. and affiliates.

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

}}{{!
Generated Python classes for mutable thrift-python types.
}}{{> common/auto_generated_py}}

# EXPERIMENTAL - DO NOT USE !!!
# See `experimental_generate_mutable_types` documentation in thrift compiler

import dataclasses

import {{program:base_library_package}}.mutable_types as _fbthrift_python_mutable_types
import {{program:base_library_package}}.mutable_typeinfos as _fbthrift_python_mutable_typeinfos
import {{program:base_library_package}}.types as _fbthrift_python_types

{{!
For now, process all structs that are neither exceptions nor unions.
}}{{#program:structs}}{{^struct:exception?}}{{^struct:union?}}

class {{> structs/unadapted_name}}(metaclass=_fbthrift_python_mutable_types.MutableStructMeta):
    _fbthrift_SPEC = (
        {{#struct:fields_ordered_by_id}}
        (
            {{field:key}},  # id
            _fbthrift_python_types.{{field:tablebased_qualifier}}, # qualifier
            "{{field:py_name}}",  # name
            {{#field:type}}{{^type:base?}}lambda: {{/type:base?}}{{ >types/mutable_typeinfo }}{{/field:type}},  # typeinfo
            {{#field:user_default_value}}{{#field:type}}{{^type:base?}}lambda: {{/type:base?}}{{/field:type}}{{> types/constant_value }}{{/field:user_default_value}}{{!
            }}{{^field:user_default_value}}None{{/field:user_default_value}},  # default value
            {{> fields/adapter_info }},  # adapter info
            {{> fields/is_primitive }}, # field type is primitive
        ),
        {{/struct:fields_ordered_by_id}}
    )

    @staticmethod
    def __get_thrift_name__() -> str:
        return "{{program:name}}.{{> structs/unadapted_name}}"

    @staticmethod
    def __get_thrift_uri__():
        return {{#struct:thrift_uri}}"{{struct:thrift_uri}}"{{/struct:thrift_uri}}{{!
            }}{{^struct:thrift_uri}}None{{/struct:thrift_uri}}

    @staticmethod
    def __get_metadata__():
        raise NotImplementedError(f"__get_metadata__() is not yet implemented for mutable thrift-python structs: {type(self)}")

    def _to_immutable(self):
        import importlib
        immutable_types = importlib.import_module("{{program:module_path}}.thrift_types")
        return immutable_types.{{> structs/unadapted_name}}(**dataclasses.asdict(self))

{{#struct:has_adapter?}}
raise NotImplementedError("Adapted struct not yet supported in thrift-python: {{> structs/unadapted_name}}")
{{/struct:has_adapter?}}{{!
}}{{/struct:union?}}{{/struct:exception?}}{{/program:structs}}

_fbthrift_all_structs = [
    {{#program:structs}}
    {{^struct:union?}}
    {{> structs/unadapted_name}},
    {{/struct:union?}}
    {{/program:structs}}
]
{{#program:structs?}}
_fbthrift_python_mutable_types.fill_specs(*_fbthrift_all_structs)
{{/program:structs?}}
