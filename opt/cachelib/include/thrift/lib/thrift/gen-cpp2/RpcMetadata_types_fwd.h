/**
 * Autogenerated by Thrift for /disk/CacheLib/cachelib/external/fbthrift/thrift/lib/thrift/RpcMetadata.thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated @nocommit
 */
#pragma once

#include <cstdint>

// BEGIN forward_declare
namespace apache::thrift {
class ZlibCompressionCodecConfig;
class ZstdCompressionCodecConfig;
class CodecConfig;
class CompressionConfig;
class NegotiationParameters;
class InteractionCreate;
class InteractionTerminate;
class FdMetadata;
class LoggingContext;
class RequestRpcMetadata;
class ErrorClassification;
class PayloadResponseMetadata;
class PayloadDeclaredExceptionMetadata;
class PayloadProxyExceptionMetadata;
class PayloadProxiedExceptionMetadata;
class PayloadAppUnknownExceptionMetdata;
class PayloadAnyExceptionMetadata;
class PayloadExceptionMetadata;
class PayloadExceptionMetadataBase;
class PayloadMetadata;
class ProxiedPayloadMetadata;
class QueueMetadata;
class ResponseRpcMetadata;
class ResponseRpcError;
class StreamRpcError;
class StreamPayloadMetadata;
class ClientMetadata;
class RequestSetupMetadata;
class SetupResponse;
class StreamHeadersPush;
class TransportMetadataPush;
class DrainCompletePush;
class ServerPushMetadata;
class ClientPushMetadata;
class HeadersPayloadContent;
class HeadersPayloadMetadata;
} // namespace apache::thrift
// END forward_declare

// BEGIN forward_declare_enums
namespace apache::thrift {
enum class ProtocolId;
enum class RpcKind;
enum class RpcPriority;
enum class CompressionAlgorithm;
enum class ErrorKind;
enum class ErrorBlame;
enum class ErrorSafety;
enum class ResponseRpcErrorCategory;
enum class ResponseRpcErrorCode;
enum class StreamRpcErrorCode;
enum class InterfaceKind;
enum class DrainCompleteCode;
} // namespace apache::thrift
// END forward_declare_enums
