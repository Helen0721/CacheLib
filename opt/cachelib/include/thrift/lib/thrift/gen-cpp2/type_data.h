/**
 * Autogenerated by Thrift for /mnt/cfs/CacheLib/cachelib/external/fbthrift/thrift/lib/thrift/type.thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated @nocommit
 */
#pragma once

#include <thrift/lib/cpp2/gen/module_data_h.h>

#include "thrift/lib/thrift/gen-cpp2/type_types.h"

namespace apache { namespace thrift {

template <> struct TEnumDataStorage<::apache::thrift::type::BaseTypeEnum> {
  using type = ::apache::thrift::type::BaseTypeEnum;
  static constexpr const std::size_t size = 17;
  static constexpr std::array<type, size> values = { {
      type::Void,
      type::Bool,
      type::Byte,
      type::I16,
      type::I32,
      type::I64,
      type::Float,
      type::Double,
      type::String,
      type::Binary,
      type::Enum,
      type::Struct,
      type::Union,
      type::Exception,
      type::List,
      type::Set,
      type::Map,
  }};
  static constexpr std::array<std::string_view, size> names = { {
      "Void"sv,
      "Bool"sv,
      "Byte"sv,
      "I16"sv,
      "I32"sv,
      "I64"sv,
      "Float"sv,
      "Double"sv,
      "String"sv,
      "Binary"sv,
      "Enum"sv,
      "Struct"sv,
      "Union"sv,
      "Exception"sv,
      "List"sv,
      "Set"sv,
      "Map"sv,
  }};
};

}} // apache::thrift
