# Generated by CMake

if("${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION}" LESS 2.6)
   message(FATAL_ERROR "CMake >= 2.6.0 required")
endif()
cmake_policy(PUSH)
cmake_policy(VERSION 2.6...3.20)
#----------------------------------------------------------------
# Generated CMake target import file.
#----------------------------------------------------------------

# Commands may need to know the format version.
set(CMAKE_IMPORT_FILE_VERSION 1)

# Protect against multiple inclusion, which would fail when already imported targets are added once more.
set(_targetsDefined)
set(_targetsNotDefined)
set(_expectedTargets)
foreach(_expectedTarget FBThrift::thrift1 FBThrift::compiler_ast FBThrift::compiler_base FBThrift::compiler FBThrift::mustache FBThrift::thriftannotation FBThrift::thrift-core FBThrift::concurrency FBThrift::transport FBThrift::async FBThrift::thrift FBThrift::rpcmetadata FBThrift::thriftmetadata FBThrift::thriftfrozen2 FBThrift::thrifttyperep FBThrift::thrifttype FBThrift::thriftanyrep FBThrift::thriftprotocol FBThrift::thriftcpp2 FBThrift::serverdbginfo)
  list(APPEND _expectedTargets ${_expectedTarget})
  if(NOT TARGET ${_expectedTarget})
    list(APPEND _targetsNotDefined ${_expectedTarget})
  endif()
  if(TARGET ${_expectedTarget})
    list(APPEND _targetsDefined ${_expectedTarget})
  endif()
endforeach()
if("${_targetsDefined}" STREQUAL "${_expectedTargets}")
  unset(_targetsDefined)
  unset(_targetsNotDefined)
  unset(_expectedTargets)
  set(CMAKE_IMPORT_FILE_VERSION)
  cmake_policy(POP)
  return()
endif()
if(NOT "${_targetsDefined}" STREQUAL "")
  message(FATAL_ERROR "Some (but not all) targets in this export set were already defined.\nTargets Defined: ${_targetsDefined}\nTargets not yet defined: ${_targetsNotDefined}\n")
endif()
unset(_targetsDefined)
unset(_targetsNotDefined)
unset(_expectedTargets)


# Compute the installation prefix relative to this file.
get_filename_component(_IMPORT_PREFIX "${CMAKE_CURRENT_LIST_FILE}" PATH)
get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" PATH)
get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" PATH)
get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" PATH)
if(_IMPORT_PREFIX STREQUAL "/")
  set(_IMPORT_PREFIX "")
endif()

# Create imported target FBThrift::thrift1
add_executable(FBThrift::thrift1 IMPORTED)

# Create imported target FBThrift::compiler_ast
add_library(FBThrift::compiler_ast SHARED IMPORTED)

set_target_properties(FBThrift::compiler_ast PROPERTIES
  INTERFACE_LINK_LIBRARIES "/usr/lib/x86_64-linux-gnu/libssl.so;/usr/lib/x86_64-linux-gnu/libcrypto.so;Boost::boost;fmt::fmt"
)

# Create imported target FBThrift::compiler_base
add_library(FBThrift::compiler_base STATIC IMPORTED)

set_target_properties(FBThrift::compiler_base PROPERTIES
  INTERFACE_LINK_LIBRARIES "FBThrift::compiler_ast;fmt::fmt"
)

# Create imported target FBThrift::compiler
add_library(FBThrift::compiler SHARED IMPORTED)

set_target_properties(FBThrift::compiler PROPERTIES
  INTERFACE_LINK_LIBRARIES "FBThrift::compiler_ast;fmt::fmt"
)

# Create imported target FBThrift::mustache
add_library(FBThrift::mustache SHARED IMPORTED)

set_target_properties(FBThrift::mustache PROPERTIES
  INTERFACE_LINK_LIBRARIES "Boost::boost"
)

# Create imported target FBThrift::thriftannotation
add_library(FBThrift::thriftannotation SHARED IMPORTED)

set_target_properties(FBThrift::thriftannotation PROPERTIES
  INTERFACE_LINK_LIBRARIES "Folly::folly"
)

# Create imported target FBThrift::thrift-core
add_library(FBThrift::thrift-core SHARED IMPORTED)

set_target_properties(FBThrift::thrift-core PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "fmt::fmt;Folly::folly"
)

# Create imported target FBThrift::concurrency
add_library(FBThrift::concurrency SHARED IMPORTED)

set_target_properties(FBThrift::concurrency PROPERTIES
  INTERFACE_LINK_LIBRARIES "Folly::folly;gflags_shared;/disk/CacheLib/opt/cachelib/lib/libglog.so"
)

# Create imported target FBThrift::transport
add_library(FBThrift::transport SHARED IMPORTED)

set_target_properties(FBThrift::transport PROPERTIES
  INTERFACE_LINK_LIBRARIES "FBThrift::concurrency;FBThrift::thrift-core;FBThrift::rpcmetadata;Folly::folly;ZLIB::ZLIB;/usr/lib/x86_64-linux-gnu/libssl.so;/usr/lib/x86_64-linux-gnu/libcrypto.so;/disk/CacheLib/opt/cachelib/lib/libzstd.so"
)

# Create imported target FBThrift::async
add_library(FBThrift::async SHARED IMPORTED)

set_target_properties(FBThrift::async PROPERTIES
  INTERFACE_COMPILE_OPTIONS "\$<\$<COMPILE_LANGUAGE:CXX>:-fsized-deallocation>"
  INTERFACE_LINK_LIBRARIES "FBThrift::concurrency;FBThrift::transport;Boost::boost;Folly::folly;wangle::wangle;/disk/CacheLib/opt/cachelib/lib/libglog.so;/usr/lib/x86_64-linux-gnu/libssl.so;/usr/lib/x86_64-linux-gnu/libcrypto.so"
)

# Create imported target FBThrift::thrift
add_library(FBThrift::thrift INTERFACE IMPORTED)

set_target_properties(FBThrift::thrift PROPERTIES
  INTERFACE_LINK_LIBRARIES "FBThrift::async;FBThrift::concurrency;FBThrift::thriftprotocol;FBThrift::transport;Folly::folly;/disk/CacheLib/opt/cachelib/lib/libglog.so"
)

# Create imported target FBThrift::rpcmetadata
add_library(FBThrift::rpcmetadata SHARED IMPORTED)

set_target_properties(FBThrift::rpcmetadata PROPERTIES
  INTERFACE_LINK_LIBRARIES "Folly::folly"
)

# Create imported target FBThrift::thriftmetadata
add_library(FBThrift::thriftmetadata SHARED IMPORTED)

set_target_properties(FBThrift::thriftmetadata PROPERTIES
  INTERFACE_LINK_LIBRARIES "Folly::folly"
)

# Create imported target FBThrift::thriftfrozen2
add_library(FBThrift::thriftfrozen2 SHARED IMPORTED)

set_target_properties(FBThrift::thriftfrozen2 PROPERTIES
  INTERFACE_LINK_LIBRARIES "Folly::folly;FBThrift::thriftmetadata;FBThrift::thriftprotocol;/disk/CacheLib/opt/cachelib/lib/libglog.so;gflags_shared"
)

# Create imported target FBThrift::thrifttyperep
add_library(FBThrift::thrifttyperep SHARED IMPORTED)

set_target_properties(FBThrift::thrifttyperep PROPERTIES
  INTERFACE_LINK_LIBRARIES "Folly::folly;FBThrift::thriftannotation"
)

# Create imported target FBThrift::thrifttype
add_library(FBThrift::thrifttype SHARED IMPORTED)

set_target_properties(FBThrift::thrifttype PROPERTIES
  INTERFACE_LINK_LIBRARIES "Folly::folly;FBThrift::thriftannotation;FBThrift::thrifttyperep;FBThrift::thriftprotocol"
)

# Create imported target FBThrift::thriftanyrep
add_library(FBThrift::thriftanyrep SHARED IMPORTED)

set_target_properties(FBThrift::thriftanyrep PROPERTIES
  INTERFACE_LINK_LIBRARIES "Folly::folly;FBThrift::thriftannotation;FBThrift::thrifttype;FBThrift::thrifttyperep"
)

# Create imported target FBThrift::thriftprotocol
add_library(FBThrift::thriftprotocol SHARED IMPORTED)

set_target_properties(FBThrift::thriftprotocol PROPERTIES
  INTERFACE_LINK_LIBRARIES "fmt::fmt;FBThrift::thrift;Folly::folly;wangle::wangle;/disk/CacheLib/opt/cachelib/lib/libglog.so;FBThrift::thrift-core"
)

# Create imported target FBThrift::thriftcpp2
add_library(FBThrift::thriftcpp2 SHARED IMPORTED)

set_target_properties(FBThrift::thriftcpp2 PROPERTIES
  INTERFACE_LINK_LIBRARIES "FBThrift::thrift;FBThrift::rpcmetadata;FBThrift::thriftannotation;FBThrift::thriftmetadata;FBThrift::thriftfrozen2;FBThrift::thriftprotocol;FBThrift::thrifttyperep;FBThrift::thrifttype;FBThrift::thriftanyrep;FBThrift::serverdbginfo"
)

# Create imported target FBThrift::serverdbginfo
add_library(FBThrift::serverdbginfo SHARED IMPORTED)

set_target_properties(FBThrift::serverdbginfo PROPERTIES
  INTERFACE_LINK_LIBRARIES "Folly::folly"
)

if(CMAKE_VERSION VERSION_LESS 3.0.0)
  message(FATAL_ERROR "This file relies on consumers using CMake 3.0.0 or greater.")
endif()

# Load information for each installed configuration.
get_filename_component(_DIR "${CMAKE_CURRENT_LIST_FILE}" PATH)
file(GLOB CONFIG_FILES "${_DIR}/FBThriftTargets-*.cmake")
foreach(f ${CONFIG_FILES})
  include(${f})
endforeach()

# Cleanup temporary variables.
set(_IMPORT_PREFIX)

# Loop over all imported files and verify that they actually exist
foreach(target ${_IMPORT_CHECK_TARGETS} )
  foreach(file ${_IMPORT_CHECK_FILES_FOR_${target}} )
    if(NOT EXISTS "${file}" )
      message(FATAL_ERROR "The imported target \"${target}\" references the file
   \"${file}\"
but this file does not exist.  Possible reasons include:
* The file was deleted, renamed, or moved to another location.
* An install or uninstall procedure did not complete successfully.
* The installation package was faulty and contained
   \"${CMAKE_CURRENT_LIST_FILE}\"
but not all the files it references.
")
    endif()
  endforeach()
  unset(_IMPORT_CHECK_FILES_FOR_${target})
endforeach()
unset(_IMPORT_CHECK_TARGETS)

# This file does not depend on other imported targets which have
# been exported from the same project but in a separate export set.

# Commands beyond this point should not need to know the version.
set(CMAKE_IMPORT_FILE_VERSION)
cmake_policy(POP)
